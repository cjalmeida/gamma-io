# Sample partial config file with 'filesystems' entries
#

# The entry used to load the filesystems configuration by default
# is named 'filesystems'. You can change this during code loading by modifying the
# constant `CONFIG_KEY` in file 'gamma/io/fs/config.py'
filesystems:
  ## Special, optional `_meta` entry providing options
  # _meta:
  #   cache:
  #     # base location for locally cached/buffered data
  #     tmp_dir: /tmp

  # a filesystem named 'local' resolving 'file://' URIs
  local:
    scheme: file

  # a sample S3 filesystem pointing to MinIO
  my_bucket_minio:
    scheme: s3
    endpoint_url: http://localhost:9000/
    bucket: my-sample-bucket
    # you probably want those as dynamic variables such as !env
    key: my-key
    secret: my-secret

# Specify connection information for non-fsspec based datasources
datasources:
  # SQL datasources accessible via SQLAlchemy core
  sql:
    # test in-memory SQLite
    test_sqlite:
      dialect: sqlite
      # driver:       # driver for DB dialect
      # username:
      # password:
      # host:         # defaults to "in-memory" (sqlite) or "localhost" (others)
      # port:
      # database:     # (optional) name of the database instance

datasets:
  group1:
    # a local CSV
    ds1:
      location: file:///tmp/foo.csv
      format: csv

    # a local CSV with options
    ds2:
      location: file:///tmp/foo.csv
      format:
        kind: csv
        sep: ","

  group2:
    foo1:
      # use a SQL database from "datasources" above
      location: sql://test_sqlite

      # SQL support the "table" format for direct read/write/append from pandas dataframes
      format:
        kind: table
        name: foo

    foo2:
      location: sql://test_sqlite

      # The "query" format allows you a read-only view of a sql query
      format:
        kind: query
        query: select * from foo
